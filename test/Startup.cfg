process PRODHLT  = {

#----------------- Input file --------------------------	
  source = PoolSource{
    untracked vstring fileNames ={ 'rfio:/castor/cern.ch/cms/store/mc/2007/1/26/mc-onsel-120_PU_Wmunu-DIGI-RECO-NoPU/0000/0091FA90-2AAE-DB11-AD4B-001560AD12EE.root' }
    #untracked vstring fileNames ={ 'file:hlt_data/Hto4mu_50.root' }
    #untracked vstring fileNames ={ 'rfio:/castor/cern.ch/user/j/jalcaraz/crab/Hto4mu_50.root' }
    untracked int32 maxEvents = 10
  }

#------------ Debug choices -----------------------------
## Usual Message Logger 
  #include "FWCore/MessageLogger/data/MessageLogger.cfi"
## Debug printouts (comment the previous line and uncomment the following)
   service = MessageLogger
   {
    untracked vstring destinations = { "cout" }
    untracked PSet cout = { untracked string threshold = "DEBUG" } 
    untracked vstring debugModules =  {  "l1extra"
                                       , "hltMuonLevel1Seed"
                                       , "SingleMuStartupL1Filtered"
                                       , "L2Muons"
                                       , "L2MuonCandidates"
                                       , "SingleMuStartupL2PreFiltered"
                                      }
   }

#------------ HLT Muon Paths -------------------------------------

  include "HLTrigger/Muon/data/PathSingleMu_Startup.cff"
  path pSMStartup = { singleMuStartup }

#----------------- Output file -------------------------
  module OUTPUT = PoolOutputModule {
    untracked string fileName ="/tmp/Muons.root" 

    untracked PSet SelectEvents = {
      vstring SelectEvents = { "pSMStartup" }
    }

    untracked vstring outputCommands = {
      # Starting point: drop everything
            "drop *",
      # Keep all objects created by this process
            "keep *_*_*_PRODHLT"
    }
  }

  # Recover original digis if necessary
  #include "Configuration/EventContent/data/EventContent.cff"
  #replace OUTPUT.outputCommands += SimTrackerFEVT.outputCommands
  #replace OUTPUT.outputCommands += SimMuonFEVT.outputCommands
  #replace OUTPUT.outputCommands += SimCalorimetryFEVT.outputCommands

#----------------- Timing + end ------------------------
## Default timing
  service = Timing { }
  endpath outpath = { OUTPUT }
## HLT-specific timing (see HLT Twiki pages for details)
  #include "HLTrigger/Timer/data/timer.cfi"
  #endpath outpath = { myTimer, OUTPUT }

}
